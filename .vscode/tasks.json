{
  "version": "2.0.0",
  "tasks": [
    {
      "label": "üîÑ Automatic Extension Check",
      "type": "shell",
      "command": "powershell",
      "args": [
        "-NoProfile",
        "-Command",
        "Write-Host 'üîç Performing automatic extension check...' -ForegroundColor Blue; if (Test-Path 'extension-function-validator.js') { node extension-function-validator.js > $null }; Write-Host '‚úÖ Extensions ready!' -ForegroundColor Green"
      ],
      "presentation": {
        "reveal": "silent",
        "close": true
      },
      "runOptions": {
        "runOn": "folderOpen"
      },
      "problemMatcher": []
    },
    {
      "label": "üîÑ Automatic Extension Recovery",
      "type": "shell",
      "command": "node",
      "args": [
        "tools/extension-auto-restart.js",
        "--on-startup"
      ],
      "presentation": {
        "reveal": "silent",
        "close": true
      },
      "runOptions": {
        "runOn": "folderOpen"
      },
      "problemMatcher": []
    },
    {
      "label": "üîß Extension Health Check",
      "type": "shell",
      "command": "powershell",
      "args": [
        "-Command",
        "Write-Host 'üîç Ausf√ºhrliche Extension-Diagnose wird durchgef√ºhrt...' -ForegroundColor Cyan; node extension-function-validator.js --detailed --auto-fix; if ($LASTEXITCODE -eq 0) { Write-Host '‚úÖ Alle Extensions funktionieren optimal!' -ForegroundColor Green } else { Write-Host '‚ö†Ô∏è Einige Probleme wurden automatisch behoben. Details im Bericht.' -ForegroundColor Yellow }"
      ],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "shared",
        "clear": true
      },
      "problemMatcher": []
    },
    {
      "label": "Extension Management Full Run",
      "type": "shell",
      "command": "node",
      "args": [
        "master-extension-orchestrator.js"
      ],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": []
    },
    {
      "label": "Extension Configuration Update",
      "type": "shell",
      "command": "node",
      "args": [
        "advanced-extension-manager.js"
      ],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": []
    },
    {
      "label": "üöÄ Complete Extension Optimization",
      "type": "shell",
      "command": "powershell",
      "args": [
        "-Command",
        "Write-Host 'üîç Starting Full Extension Optimization...' -ForegroundColor Cyan; node extension-function-validator.js && node advanced-extension-manager.js && node master-extension-orchestrator.js && Write-Host '‚úÖ Extension Optimization Complete!' -ForegroundColor Green"
      ],
      "group": {
        "kind": "build",
        "isDefault": true
      },
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "new",
        "clear": true
      },
      "problemMatcher": []
    },
    {
      "label": "üé® Tailwind: IntelliSense Active",
      "type": "shell",
      "command": "echo",
      "args": [
        "Tailwind CSS IntelliSense activated - start typing class names for autocomplete"
      ],
      "group": "build"
    },
    {
      "label": "‚ôø Accessibility: WCAG Check",
      "type": "shell",
      "command": "echo",
      "args": [
        "Web Accessibility extension active - check for WCAG compliance indicators"
      ],
      "group": "test"
    },
    {
      "label": "üîÑ Start Session-Saver",
      "type": "shell",
      "command": "node",
      "args": [
        "tools/session-saver.js"
      ],
      "presentation": {
        "reveal": "never",
        "echo": false,
        "focus": false,
        "panel": "dedicated",
        "close": true
      },
      "runOptions": {
        "runOn": "folderOpen"
      },
      "isBackground": true,
      "problemMatcher": []
    },
    {
      "label": "üß† Start AI Conversation Bridge",
      "type": "shell",
      "command": "node",
      "args": [
        "tools/start-ai-bridge.js"
      ],
      "presentation": {
        "reveal": "never",
        "echo": false,
        "focus": false,
        "panel": "dedicated",
        "close": true
      },
      "runOptions": {
        "runOn": "folderOpen"
      },
      "isBackground": true,
      "problemMatcher": []
    },
    {
      "label": "üîç Show AI Status",
      "type": "shell",
      "command": "node",
      "args": [
        "tools/ai-status.js"
      ],
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "shared",
        "clear": true
      },
      "group": "test",
      "problemMatcher": []
    },
    {
      "label": "üîÑ Restart All AI Services",
      "type": "shell",
      "command": "node",
      "args": [
        "tools/ai-services-manager.js",
        "restart"
      ],
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "shared",
        "clear": true
      },
      "group": "test",
      "problemMatcher": []
    },
    {
      "label": "üîÑ GSC Auth Check",
      "type": "shell",
      "command": "node",
      "args": [
        "tools/gsc-auth-check.js"
      ],
      "presentation": {
        "reveal": "silent",
        "close": true
      },
      "runOptions": {
        "runOn": "folderOpen"
      },
      "isBackground": true,
      "problemMatcher": []
    },
    {
      "label": "üîÑ GSC Integration Monitor",
      "type": "shell",
      "command": "node",
      "args": [
        "tools/gsc-integration-monitor.js"
      ],
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared",
        "clear": true
      },
      "group": "test",
      "problemMatcher": []
    },
    {
      "label": "üìä Extension Status Dashboard",
      "type": "shell",
      "command": "node",
      "args": [
        "tools/extension-status-dashboard.js"
      ],
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "shared",
        "clear": true
      },
      "group": "test",
      "problemMatcher": []
    },
    {
      "label": "üîç Unified Status Check",
      "type": "shell",
      "command": "node",
      "args": [
        "tools/unified-status-manager.js"
      ],
      "presentation": {
        "reveal": "always",
        "focus": true,
        "panel": "shared",
        "showReuseMessage": true
      },
      "problemMatcher": []
    },
    {
      "label": "üîÑ Auto Start Unified Manager",
      "type": "shell",
      "command": "node",
      "args": [
        "tools/unified-status-manager.js",
        "--silent"
      ],
      "presentation": {
        "reveal": "silent",
        "close": true
      },
      "runOptions": {
        "runOn": "folderOpen"
      },
      "problemMatcher": []
    },
    {
      "label": "üö® GSC Indexierungspr√ºfung",
      "type": "shell",
      "command": "node",
      "args": [
        "tools/gsc-startup-check.js"
      ],
      "presentation": {
        "reveal": "always",
        "focus": true,
        "panel": "shared"
      },
      "runOptions": {
        "runOn": "folderOpen"
      },
      "problemMatcher": []
    },
    {
      "label": "üö® Fix GSC Indexierung (noindex entfernen)",
      "type": "shell",
      "command": "powershell",
      "args": [
        "-Command",
        "Write-Host 'üîç Suche nach noindex-Tags...' -ForegroundColor Yellow; Get-ChildItem -Path . -Recurse -Include *.html,*.htm | Select-String -Pattern '<meta.*noindex' | ForEach-Object { Write-Host ('‚ö†Ô∏è In ' + $_.Path + ': ' + $_.Line) -ForegroundColor Red }; Write-Host 'üõ†Ô∏è Starte Reparatur...' -ForegroundColor Cyan; Get-ChildItem -Path . -Recurse -Include *.html,*.htm | ForEach-Object { $content = Get-Content $_.FullName -Raw; if ($content -match '<meta.*noindex') { $updated = $content -replace '<meta.*noindex.*?>', '<!-- INDEXIERUNG AKTIVIERT -->'; Set-Content -Path $_.FullName -Value $updated -Encoding UTF8; Write-Host ('‚úÖ Korrigiert: ' + $_.FullName) -ForegroundColor Green } }; Write-Host '‚úì Indexierungs-Fix abgeschlossen!' -ForegroundColor Green"
      ],
      "group": {
        "kind": "build",
        "isDefault": false
      },
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "new",
        "clear": true
      },
      "problemMatcher": []
    },
    {
      "label": "üîß Extension Health Check (Worker)",
      "type": "shell",
      "command": "powershell",
      "args": [
        "-Command",
        "Write-Host 'üîç Worker - Extension Health Check l√§uft...' -ForegroundColor Blue; node extension-function-validator.js --silent > .temp/worker-ext-check.log; if ($LASTEXITCODE -eq 0) { Write-Host '‚úÖ Worker - Extension Check erfolgreich' -ForegroundColor Green } else { Write-Host '‚ö†Ô∏è Worker - Extension Check mit Warnungen' -ForegroundColor Yellow }"
      ],
      "group": "test",
      "isBackground": true,
      "presentation": {
        "echo": false,
        "reveal": "never",
        "focus": false,
        "panel": "dedicated",
        "close": true
      },
      "problemMatcher": []
    },
    {
      "label": "üîç GSC Indexierungsmonitor (Worker)",
      "type": "shell",
      "command": "node",
      "args": [
        "tools/gsc-indexing-monitor.js"
      ],
      "isBackground": true,
      "presentation": {
        "echo": false,
        "reveal": "never",
        "focus": false,
        "panel": "dedicated",
        "close": true
      },
      "problemMatcher": []
    },
    {
      "label": "üö® GSC Indexierungspr√ºfung (Worker)",
      "type": "shell",
      "command": "node",
      "args": [
        "tools/gsc-startup-check.js"
      ],
      "isBackground": true,
      "presentation": {
        "echo": false,
        "reveal": "never",
        "focus": false,
        "panel": "dedicated",
        "close": true
      },
      "problemMatcher": []
    },
    {
      "label": "üîç GSC Indexierungs-Watcher starten",
      "type": "shell",
      "command": "node",
      "args": [
        "tools/gsc-indexing-watch.js"
      ],
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "dedicated",
        "clear": true
      },
      "isBackground": true,
      "problemMatcher": []
    },
    {
      "label": "üìä GSC Indexierungsbericht erstellen",
      "type": "shell",
      "command": "node",
      "args": [
        "tools/gsc-indexing-report.js"
      ],
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "shared",
        "clear": true
      },
      "group": "test",
      "problemMatcher": []
    },
    {
      "label": "üìä Unified Status Report erstellen",
      "type": "shell",
      "command": "node",
      "args": [
        "tools/unified-status-report.js"
      ],
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "shared",
        "clear": true
      },
      "group": {
        "kind": "test",
        "isDefault": true
      },
      "problemMatcher": []
    },
    {
      "label": "üîÑ Auto-Recovery nach Absturz",
      "type": "shell",
      "command": "node",
      "args": [
        "tools/auto-recovery.js"
      ],
      "presentation": {
        "reveal": "silent",
        "close": true
      },
      "runOptions": {
        "runOn": "folderOpen"
      },
      "isBackground": true,
      "problemMatcher": []
    },
    {
      "label": "üåê GSC Integration starten",
      "type": "shell",
      "command": "node",
      "args": [
        "tools/gsc-integration.js",
        "--watch"
      ],
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "shared",
        "clear": true
      },
      "isBackground": true,
      "problemMatcher": []
    },
    {
      "label": "üì¶ Dependabot Status Check",
      "type": "shell",
      "command": "node",
      "args": [
        "tools/dependabot-status-monitor.js"
      ],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "shared",
        "clear": true
      },
      "problemMatcher": []
    },
    {
      "label": "üîÑ Auto Dependabot Monitor",
      "type": "shell",
      "command": "node",
      "args": [
        "tools/dependabot-status-monitor.js",
        "--silent",
        "--background"
      ],
      "presentation": {
        "reveal": "silent",
        "close": true
      },
      "runOptions": {
        "runOn": "folderOpen"
      },
      "isBackground": true,
      "problemMatcher": []
    },
    {
      "label": "üì∏ Start Auto Screenshot Recovery (5s)",
      "type": "shell",
      "command": "node",
      "args": [
        "tools/auto-screenshot-manager.js"
      ],
      "presentation": {
        "reveal": "never",
        "close": true,
        "echo": false,
        "focus": false,
        "panel": "dedicated"
      },
      "runOptions": {
        "runOn": "folderOpen"
      },
      "isBackground": true,
      "problemMatcher": []
    },
    {
      "label": "üì∏ Take Recovery Screenshot Now",
      "type": "shell",
      "command": "powershell",
      "args": [
        "-Command",
        "Write-Host 'üì∏ Erstelle Recovery-Screenshot...' -ForegroundColor Cyan; node tools/auto-screenshot-manager.js --now; Write-Host '‚úÖ Recovery-Screenshot erstellt!' -ForegroundColor Green"
      ],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared",
        "clear": true
      },
      "problemMatcher": []
    },
    {
      "label": "üîç View Recovery Screenshots",
      "type": "shell",
      "command": "powershell",
      "args": [
        "-Command",
        "Write-Host 'üîç Verf√ºgbare Recovery-Screenshots:' -ForegroundColor Cyan; Get-ChildItem -Path '.recovery-screenshots' -Filter 'vscode_recovery_*.png' | Sort-Object -Property LastWriteTime -Descending | Format-Table Name,@{Name='Time';Expression={$_.LastWriteTime}},@{Name='Size (KB)';Expression={[int]($_.Length / 1KB)}} -AutoSize; Write-Host 'üí° Um einen Screenshot zu √∂ffnen, doppelklicken Sie darauf im Explorer.' -ForegroundColor Green"
      ],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "shared",
        "clear": true
      },
      "problemMatcher": []
    },
    {
      "label": "üîí Sicherheitsrelevante Updates installieren",
      "type": "shell",
      "command": "node",
      "args": [
        "tools/dependency-security-updater.js"
      ],
      "group": {
        "kind": "build",
        "isDefault": false
      },
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "new",
        "clear": true
      },
      "problemMatcher": []
    },
    {
      "label": "üîç Analyse der Abh√§ngigkeiten (ohne Update)",
      "type": "shell",
      "command": "node",
      "args": [
        "tools/dependency-security-updater.js",
        "--test"
      ],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "shared",
        "clear": true
      },
      "problemMatcher": []
    },
    {
      "label": "üîÑ VS Code Recovery Center",
      "type": "shell",
      "command": "powershell",
      "args": [
        "-Command",
        "Write-Host 'üîç VS Code Recovery Center wird gestartet...' -ForegroundColor Cyan; Write-Host ''; Write-Host 'üì∏ Recovery-Screenshots:' -ForegroundColor Yellow; Get-ChildItem -Path '.recovery-screenshots' -Filter 'vscode_recovery_*.png' -ErrorAction SilentlyContinue | Sort-Object -Property LastWriteTime -Descending | Select-Object -First 5 | Format-Table Name,@{Name='Zeit';Expression={$_.LastWriteTime.ToString('dd.MM HH:mm')}},@{Name='KB';Expression={[int]($_.Length / 1KB)}} -AutoSize; Write-Host ''; Write-Host 'üì¶ Abh√§ngigkeits-Backups:' -ForegroundColor Yellow; Get-ChildItem -Path '.dependency-backups' -Directory -ErrorAction SilentlyContinue | Sort-Object -Property LastWriteTime -Descending | Select-Object -First 5 | Format-Table Name,@{Name='Zeitpunkt';Expression={$_.LastWriteTime.ToString('dd.MM HH:mm')}} -AutoSize; Write-Host ''; Write-Host 'üõ†Ô∏è Wiederherstellungs-Optionen:' -ForegroundColor Green; Write-Host ' - Task \"üì∏ Take Recovery Screenshot Now\" f√ºr sofortigen Screenshot' -ForegroundColor Cyan; Write-Host ' - Task \"üîí Sicherheitsrelevante Updates installieren\" f√ºr Abh√§ngigkeits-Updates' -ForegroundColor Cyan; Write-Host ' - Task \"üîÑ Auto Dependabot Monitor\" f√ºr automatisches Monitoring' -ForegroundColor Cyan; Write-Host ''; Write-Host 'üí° Tipp: Nutzen Sie den VS Code Explorer, um Screenshots direkt zu √∂ffnen!' -ForegroundColor Magenta;"
      ],
      "group": {
        "kind": "none",
        "isDefault": true
      },
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "shared",
        "clear": true
      },
      "problemMatcher": []
    },
    {
      "label": "üö® Automatischer Recovery-Modus",
      "type": "shell",
      "command": "powershell",
      "args": [
        "-Command",
        "Write-Host 'üö® Automatischer Recovery-Modus gestartet...' -ForegroundColor Red; Write-Host 'Screenshots werden alle 2 Minuten erstellt!' -ForegroundColor Yellow; node tools/auto-screenshot-manager.js --interval=2"
      ],
      "group": "none",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "dedicated",
        "clear": true
      },
      "isBackground": true,
      "problemMatcher": []
    },
    {
      "label": "üîÑ Auto Recovery Manager starten",
      "type": "shell",
      "command": "node",
      "args": [
        "tools/auto-recovery-manager.js",
        "--silent"
      ],
      "presentation": {
        "reveal": "silent",
        "close": true
      },
      "runOptions": {
        "runOn": "folderOpen"
      },
      "isBackground": true,
      "problemMatcher": []
    },
    {
      "label": "üì∏ Ultra High-Frequency Screenshots (1s)",
      "type": "shell",
      "command": "node",
      "args": [
        "tools/auto-screenshot-manager.js",
        "--high-freq"
      ],
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "shared",
        "clear": true
      },
      "isBackground": true,
      "problemMatcher": []
    },
    {
      "label": "üì∏ Standard-Frequency Screenshots (5s)",
      "type": "shell",
      "command": "node",
      "args": [
        "tools/auto-screenshot-manager.js"
      ],
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "shared",
        "clear": true
      },
      "isBackground": true,
      "problemMatcher": []
    },
    {
      "label": "üì∏ Low-Frequency Screenshots (30s)",
      "type": "shell",
      "command": "node",
      "args": [
        "tools/auto-screenshot-manager.js",
        "--low-freq"
      ],
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "shared",
        "clear": true
      },
      "isBackground": true,
      "problemMatcher": []
    },
    {
      "label": "üóëÔ∏è Alte Screenshots aufr√§umen",
      "type": "shell",
      "command": "powershell",
      "args": [
        "-Command",
        "Write-Host 'üîç Screenshots werden aufger√§umt...' -ForegroundColor Yellow; $count = (Get-ChildItem -Path '.recovery-screenshots' -Filter 'vscode_recovery_*.png' -ErrorAction SilentlyContinue).Count; node tools/auto-screenshot-manager.js --now; Write-Host \"‚úÖ Screenshot-Aufr√§umen abgeschlossen! Vorher: $count Screenshots\" -ForegroundColor Green"
      ],
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared",
        "clear": true
      },
      "problemMatcher": []
    },
    {
      "label": "üö® Fehler-Report erstellen",
      "type": "shell",
      "command": "node",
      "args": [
        "tools/error-collector.js"
      ],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "shared",
        "clear": true
      },
      "problemMatcher": []
    },
    {
      "label": "üîÑ Auto Fehler-Monitoring",
      "type": "shell",
      "command": "powershell",
      "args": [
        "-Command",
        "Write-Host 'üîÑ Starte automatisches Fehler-Monitoring...' -ForegroundColor Blue; node tools/error-collector.js > $null; Write-Host '‚úÖ Fehler-Report wurde erstellt: ERROR_REPORT.md' -ForegroundColor Green"
      ],
      "presentation": {
        "reveal": "silent",
        "close": true
      },
      "runOptions": {
        "runOn": "folderOpen"
      },
      "problemMatcher": []
    },
    {
      "label": "üî¨ Comprehensive System Health Check",
      "type": "shell",
      "command": "powershell",
      "args": [
        "-Command",
        "Write-Host 'üî¨ Starte umfassenden System-Check...' -ForegroundColor Cyan; Write-Host ''; Write-Host '1Ô∏è‚É£ Pr√ºfe Extensions...' -ForegroundColor Yellow; node extension-function-validator.js --silent > .temp/ext-check.log; Write-Host '2Ô∏è‚É£ Pr√ºfe GSC-Integration...' -ForegroundColor Yellow; node tools/gsc-auth-check.js --test > .temp/gsc-check.log; Write-Host '3Ô∏è‚É£ Pr√ºfe Recovery-System...' -ForegroundColor Yellow; node tools/auto-recovery-manager.js --test > .temp/recovery-check.log; Write-Host '4Ô∏è‚É£ Pr√ºfe Abh√§ngigkeiten...' -ForegroundColor Yellow; node tools/dependabot-status-monitor.js --silent > .temp/dep-check.log; Write-Host '5Ô∏è‚É£ Pr√ºfe GitHub Actions...' -ForegroundColor Yellow; node tools/check-github-workflows.js --silent > .temp/actions-check.log || echo 'Workflow-Check √ºbersprungen' > .temp/actions-check.log; Write-Host ''; Write-Host 'üìä Erstelle Bericht...' -ForegroundColor Cyan; node tools/generate-health-report.js; Write-Host '‚úÖ System Health Check abgeschlossen!' -ForegroundColor Green; Write-Host '   Bericht verf√ºgbar unter: SYSTEM_HEALTH_REPORT.md' -ForegroundColor Green"
      ],
      "group": {
        "kind": "test",
        "isDefault": false
      },
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "shared",
        "clear": true
      },
      "problemMatcher": []
    },
    {
      "label": "üîÑ Auto System Health Check",
      "type": "shell",
      "command": "powershell",
      "args": [
        "-Command",
        "if (-not (Test-Path '.temp')) { New-Item -ItemType Directory -Path '.temp' -Force }; Write-Host 'üî¨ Starte automatischen System-Check...' -ForegroundColor Blue; node tools/generate-health-report.js --silent > $null; Write-Host '‚úÖ System Health Report wurde erstellt: SYSTEM_HEALTH_REPORT.md' -ForegroundColor Green"
      ],
      "presentation": {
        "reveal": "silent",
        "close": true
      },
      "runOptions": {
        "runOn": "folderOpen"
      },
      "problemMatcher": []
    },
    {
      "label": "üöÄ System Komplettcheck & Optimierung",
      "type": "shell",
      "command": "powershell",
      "args": [
        "-Command",
        "Write-Host 'üöÄ Starte umfassenden System-Komplettcheck...' -ForegroundColor Magenta; Write-Host ''; Write-Host 'üîç Phase 1: Pr√ºfe Extensions...' -ForegroundColor Cyan; node extension-function-validator.js --detailed; Write-Host ''; Write-Host 'üîÑ Phase 2: Starte AI Services...' -ForegroundColor Cyan; node tools/ai-services-manager.js restart; Write-Host ''; Write-Host 'üåê Phase 3: Pr√ºfe GSC-Integration...' -ForegroundColor Cyan; node tools/gsc-integration-monitor.js; Write-Host ''; Write-Host 'üì∏ Phase 4: Erstelle Recovery-Screenshot...' -ForegroundColor Cyan; node tools/auto-screenshot-manager.js --now; Write-Host ''; Write-Host 'üì¶ Phase 5: Pr√ºfe Dependencies...' -ForegroundColor Cyan; node tools/dependency-security-updater.js --test; Write-Host ''; Write-Host 'üìä Phase 6: Erstelle Status-Report...' -ForegroundColor Cyan; node tools/unified-status-report.js; Write-Host ''; Write-Host '‚úÖ System-Komplettcheck abgeschlossen!' -ForegroundColor Green"
      ],
      "group": {
        "kind": "test",
        "isDefault": true
      },
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "dedicated",
        "clear": true
      },
      "problemMatcher": []
    }
  ]
}

