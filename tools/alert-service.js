// alert-service.js
// Zentrale Alert-Funktion fÃ¼r kritische Fehler/Status (Slack, Webhook, E-Mail)
// Nutzung: require('./tools/alert-service').sendAlert(...)

const https = require('https');
const url = require('url');
const { createGitHubIssue } = require('./github-issue-creator'); // Importiert den Issue Creator

/**
 * Sende einen Alert an einen Webhook und/oder erstelle ein GitHub Issue.
 * @param {Object} options
 * @param {string} options.message - Die Nachricht (Pflichtfeld)
 * @param {string} [options.webhookUrl] - Die Webhook-URL (optional)
 * @param {string} [options.level] - z.B. 'error', 'warning', 'info'
 * @param {Object} [options.extra] - ZusÃ¤tzliche Daten (optional)
 * @param {boolean} [options.createIssue] - Ob ein GitHub Issue erstellt werden soll (Standard: true fÃ¼r Fehler)
 */
function sendAlert({ message, webhookUrl, level = 'error', extra = {}, createIssue = (level === 'error' || level === 'critical') }) {
  if (!message) return;

  const payload = {
    text: `[${level.toUpperCase()}] ${message}`,
    ...extra
  };

  // Webhook senden
  if (webhookUrl) {
    const parsedUrl = url.parse(webhookUrl);
    const data = JSON.stringify(payload);
    const req = https.request({
      hostname: parsedUrl.hostname,
      path: parsedUrl.path,
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Content-Length': data.length
      }
    }, res => {});
    req.on('error', (e) => {
      console.error('Alert-Webhook-Fehler:', e);
    });
    req.write(data);
    req.end();
  }

  // GitHub Issue erstellen (nur bei Fehlern und wenn aktiviert)
  if (createIssue) {
    try {
      const issueTitle = message;
      const issueBody = `**Fehlerdetails:**\n\n\`\`\`json\n${JSON.stringify(extra, null, 2)}\n\`\`\`\n\n**Kontext:**\n\nDieser Fehler wurde vom automatisierten System-Monitoring erkannt. Bitte untersuchen Sie die Ursache und beheben Sie das Problem.`;
      
      // Labels je nach Dringlichkeit anpassen
      const labels = ['bug', 'autogenerated', 'critical-alert'];

      createGitHubIssue(issueTitle, issueBody, labels)
        .then(issueUrl => console.log(`ðŸ”— GitHub Issue wurde erstellt: ${issueUrl}`))
        .catch(err => console.error(`Fehler beim Erstellen des GitHub Issues aus dem Alert-Service: ${err.message}`));

    } catch (err) {
      console.error(`Konnte GitHub Issue nicht erstellen: ${err.message}`);
    }
  }

  if (!webhookUrl && !createIssue) {
    // Fallback: Logge Alert lokal, wenn keine Benachrichtigungsmethode konfiguriert ist
    console.error('ALERT:', payload);
  }
}

module.exports = { sendAlert };
