name: CI - Test and Validate

on:
  push:
    branches: [ main, master, feature/add-new-button ]
  pull_request:
    branches: [ main, master ]

jobs:
  test-suite:
    name: 🧪 Test Suite
    runs-on: ubuntu-latest
    env:
      CI: true
      NODE_VERSION: '20'
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
      
      - name: 📦 Set up Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: 📥 Install dependencies
        run: npm ci
      
      - name: 🎨 Lint code
        run: npm run lint:check
      
      - name: 🧪 Run unit & integration tests
        run: npm test -- --verbose
      
      - name: 🏗️ Build CSS for Playwright
        run: npm run build:css
        
      - name: 🚀 Run E2E tests with Playwright
        run: npx playwright install --with-deps && npx playwright test

      - name: 📊 Upload test artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: |
            coverage/
            playwright-report/

  security-check:
    name: 🔒 Security & Dependency Check
    needs: test-suite
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
      
      - name: 📦 Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: 📥 Install dependencies
        run: npm ci
        
      - name: 🛡️ Run security audit
        run: npm audit --audit-level=high

  accessibility-check:
    name: ♿ Accessibility Check
    needs: test-suite
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
      
      - name: 📦 Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: 📥 Install dependencies
        run: npm ci

      - name: 🏗️ Build Project
        run: npm run build:css
        
      - name: ♿ Run Lighthouse accessibility audit
        run: npx lhci autorun --config=./lighthouserc-accessibility.js
        env:
          LHCI_SERVER_URL: ${{ secrets.LHCI_SERVER_URL }}
          LHCI_TOKEN: ${{ secrets.LHCI_TOKEN }}

  send-failure-notification:
    name: ✉️ Send Failure Notification
    needs: [test-suite, security-check, accessibility-check]
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - name: 📧 Send E-Mail Alert
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.mail.yahoo.com
          server_port: 465
          username: ${{ secrets.ALERT_EMAIL_USER }}
          password: ${{ secrets.ALERT_EMAIL_PASS }}
          subject: "🚨 CI Failure: Workflow failed for ${{ github.repository }}"
          to: ${{ secrets.ALERT_EMAIL_USER }}
          from: BurniToken Notifier <github-actions-no-reply@burnitoken.com>
          body: |
            A workflow run for **${{ github.repository }}** failed.

            - **Workflow:** `${{ github.workflow }}`
            - **Branch:** `${{ github.ref_name }}`
            - **Commit:** `${{ github.sha }}`
            
            Please review the failed run for details:
            ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
