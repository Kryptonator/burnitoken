name: 🚀 Production Deployment & Build

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

env:
  NODE_VERSION: '20' # Vereinheitlicht auf Node 20
  SMTP_HOST: ${{ secrets.SMTP_HOST }}
  SMTP_PORT: ${{ secrets.SMTP_PORT }}
  SMTP_USER: ${{ secrets.SMTP_USER }}
  SMTP_PASS: ${{ secrets.SMTP_PASS }}
  ALERT_EMAIL: ${{ secrets.ALERT_EMAIL }}

jobs:
  build-and-test:
    name: 🏗️ Build, Test & Report
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        
      - name: 📦 Setup Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: 📥 Install dependencies
        run: npm ci
        
      - name: 🏗️ Build project
        run: npm run build

      - name: 🚀 Start server in background
        run: npm run serve &

      - name: ⏱️ Wait for server to be ready
        run: npx wait-on http://localhost:8080 -t 60000

      - name: 🛡️ Run QA, Tests & Reports
        run: |
          set -eo pipefail
          npm run lint:report || true
          npm run test:e2e:ci || true
          npm run lighthouse || true
        
      - name: 📝 Generate Status Page
        if: always()
        run: node tools/generate-status-page.js
        
      - name: 🔒 Security audit
        run: npm audit
        
      - name: 📊 Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: production-build
          path: |
            ./index.html
            ./assets/
            ./_headers
            ./CNAME
            ./404.html
            ./manifest.json
            ./status.html

      - name: 📤 Archive QA Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: production-qa-reports
          path: |
            playwright-report/
            .lighthouseci/
            lint-results.json

      - name: 📧 Send mail on failure
        if: failure()
        run: |
          node -e 'require("./tools/alert-service").sendAlert({ 
            message: "Production Workflow Failed in ${{ github.repository }}", 
            level: "critical", 
            extra: { 
              repository: "${{ github.repository }}", 
              commit: "${{ github.sha }}", 
              workflow: "${{ github.workflow }}" 
            }, 
            email: { 
              to: process.env.ALERT_EMAIL, 
              subject: "❌ PRODUCTION Workflow Failed: ${{ github.repository }}" 
            } 
          })'

  deploy-gh-pages:
    name: 🚀 Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/main'
    
    permissions:
      contents: write
      
    steps:
      - name: 📥 Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: production-build
          path: ./
          
      - name: 🚀 Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: .
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'
          commit_message: '🚀 Deploy: ${{ github.sha }}'
