name: 🆘 Emergency Deployment

on:
  workflow_dispatch:
    inputs:
      reason:
        description: 'Reason for emergency deployment'
        required: true
        default: 'Hotfix'

env:
  NODE_VERSION: '18'

jobs:
  build-and-deploy:
    name: 🚨 Build & Deploy
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📥 Install dependencies
        run: npm ci

      - name: 🏗️ Build for production
        run: npm run build:css

      - name: 🌐 Deploy to Netlify
        uses: nwtgck/actions-netlify@v1.2
        with:
          publish-dir: './'
          production-branch: 'main'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: "🆘 Emergency Deploy: ${{ github.event.inputs.reason }}"
          enable-pull-request-comment: false
          enable-commit-comment: true
          overwrites-pull-request-comment: true
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        timeout-minutes: 1

  notify:
    name: 📣 Notify
    runs-on: ubuntu-latest
    needs: [build-and-deploy]
    if: always()

    steps:
      - name: Status-Webhook bei Erfolg
        if: needs.build-and-deploy.result == 'success'
        run: |
          curl -X POST -H "Content-Type: application/json" -d '{"status":"success","workflow":"Emergency Deployment", "reason": "${{ github.event.inputs.reason }}"}' ${{ secrets.STATUS_WEBHOOK_URL }}
      - name: Status-Webhook bei Fehler
        if: failure()
        run: |
          curl -X POST -H "Content-Type: application/json" -d '{"status":"failure","workflow":"Emergency Deployment", "reason": "${{ github.event.inputs.reason }}"}' ${{ secrets.STATUS_WEBHOOK_URL }}
