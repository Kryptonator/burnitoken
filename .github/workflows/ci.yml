name: CI - Test and Validate

on:
  pull_request:
    branches: [ main, master ]
  push:
    branches: [ develop, feature/* ]
  workflow_dispatch:

env:
  NODE_VERSION: '20'

jobs:
  test:
    name: 🧪 Test Suite
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        
      - name: 📦 Setup Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: 📥 Install dependencies
        run: npm ci
        
      - name: 🔍 Lint code
        run: npm run lint:check
        
      - name: 🔨 Build project
        run: npm run build
        
      - name: 🧪 Run unit tests
        run: npm test
        
      - name: ✅ Validate HTML
        run: npm run validate
        
      - name: 🚀 Run Lighthouse CI
        run: npx lhci autorun || true

      - name: 🧪 Run Playwright E2E tests
        run: npm run test:e2e
      - name: 🔒 Run npm audit
        run: npm run audit
      - name: 🛡️ Run Snyk test (optional)
        run: npm run snyk:test || true
      - name: 📤 Upload Lighthouse Report
        uses: actions/upload-artifact@v4
        with:
          name: lighthouse-report
          path: .lighthouseci
      - name: 📤 Upload Audit Report
        uses: actions/upload-artifact@v4
        with:
          name: audit-report
          path: audit.json

  security:
    name: 🔒 Security & Dependency Check
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        
      - name: 📦 Setup Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: 📥 Install dependencies
        run: npm ci
        
      - name: 🔒 Snyk Security Scan
        uses: snyk/actions/node@v3
        with:
          command: test
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        continue-on-error: true
        
      - name: 🛡️ SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        with:
          projectBaseDir: .
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        continue-on-error: true

  accessibility:
    name: ♿ Accessibility Check
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        
      - name: 📦 Setup Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: 📥 Install dependencies
        run: npm ci
        
      - name: ♿ Run axe-core accessibility tests
        run: |
          npx axe ./index.html --save --reporter json --output axe-report.json || true
          
      - name: 📎 Upload Accessibility Report
        uses: actions/upload-artifact@v4
        with:
          name: axe-accessibility-report
          path: axe-report.json
        if: always()
