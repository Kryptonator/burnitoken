name: CI - Test and Validate

on:
  pull_request:
    branches: [ main, master ]
  push:
    branches: [ develop, feature/* ]
  workflow_dispatch:

env:
  NODE_VERSION: '20'

jobs:
  test:
    name: 🧪 Test Suite
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        
      - name: 📦 Setup Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: 📥 Install dependencies
        run: npm ci
        
      - name: 🔍 Lint code
        run: npm run lint:check
        
      - name: 🔨 Build project
        run: npm run build
        
      - name: 🧪 Run unit tests
        run: npm test
        
      - name: ✅ Validate HTML
        run: npm run validate
        
      - name: 🌐 Verify i18n system
        run: |
          echo "Checking i18n implementation..."
          
          if grep -q "translations.*=" main.js; then
            echo "✅ Translations object found in main.js"
          else
            echo "❌ Translations object missing in main.js"
            exit 1
          fi
          
          if grep -q "changeLanguage" main.js; then
            echo "✅ Language switching function found"
          else
            echo "❌ Language switching function missing"
            exit 1
          fi
          
          if grep -q "data-i18n" index.html; then
            echo "✅ i18n attributes found in HTML"
          else
            echo "❌ i18n attributes missing in HTML"
            exit 1
          fi
          
          if grep -q 'id="lang-select"' index.html; then
            echo "✅ Language selector found"
          else
            echo "❌ Language selector missing"
            exit 1
          fi
          
          echo "🎉 i18n system verification passed!"
      - run: npm test
      - run: npm run build
      - name: Run Lighthouse CI
        run: npx lhci autorun || true

  security:
    name: [31mSecurity & Dependency Check[0m
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
      - name: 📦 Setup Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      - name: 📥 Install dependencies
        run: npm ci
      - name: 🔒 Snyk Security Scan
        uses: snyk/actions/node@v3
        with:
          command: test
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      - name: 🛡️ SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        with:
          projectBaseDir: .
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

  accessibility:
    name: ♿ Accessibility Check (axe-core)
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
      - name: 📦 Setup Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      - name: 📥 Install dependencies
        run: npm ci
      - name: ♿ Run axe-core accessibility tests
        run: |
          npx axe ./index.html --save --reporter json --output axe-report.json || true
      - name: 📎 Upload Accessibility Report
        uses: actions/upload-artifact@v4
        with:
          name: axe-accessibility-report
          path: axe-report.json
