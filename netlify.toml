[build]
  publish = "."
  command = "npm run build:prod || echo 'Static site deployment'"

[build.environment]
  NODE_VERSION = "20"
  NPM_FLAGS = "--no-audit --production"

# Production context
[context.production]
  environment = { NODE_ENV = "production" }

# Deploy Preview context
[context.deploy-preview]
  environment = { NODE_ENV = "staging" }

# Branch deploy context
[context.branch-deploy]
  environment = { NODE_ENV = "development" }

# Specific branch context
[context.feature]
  command = "npm run build:feature"

# Asset optimization
[build.processing]
  skip_processing = false
[build.processing.css]
  bundle = true
  minify = true
[build.processing.js]
  bundle = true
  minify = true
[build.processing.html]
  pretty_urls = true
[build.processing.images]
  compress = true

# Redirects
# Sitemap-spezifische Regeln mit höherer Priorität
[[redirects]]
  from = "/sitemap.xml"
  to = "/sitemap.xml"
  status = 200
  force = true
  
[[redirects]]
  from = "/sitemap-basic.xml"
  to = "/sitemap-basic.xml"
  status = 200
  force = true
  
[[redirects]]
  from = "/sitemapindex.xml"
  to = "/sitemapindex.xml"
  status = 200
  force = true

# ACHTUNG: Diese Regel gilt erst für alles, was nicht durch die obigen Regeln abgedeckt ist
[[redirects]]
  from = "/*"
  to = "/index.html"
  status = 200
  force = false

# Plugins
[[plugins]]
  package = "@netlify/plugin-lighthouse"
  [plugins.inputs]
    output_path = "reports/lighthouse.html"

# JFrog Integration (commented out until plugin is available)
# [[plugins]]
#   package = "@netlify/plugin-run-build-command"
#   [plugins.inputs]
#     command = "node tools/jfrog-netlify-integration.js"

# Headers
[[headers]]
  for = "/*"
  [headers.values]
    X-Frame-Options = "DENY"
    X-XSS-Protection = "1; mode=block"
    X-Content-Type-Options = "nosniff"
    Referrer-Policy = "strict-origin-when-cross-origin"
    Permissions-Policy = "geolocation=(), microphone=(), camera=(), fullscreen=(self)"
    Content-Security-Policy = "default-src 'self' https:; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.jsdelivr.net https://cdnjs.cloudflare.com https://fonts.googleapis.com https://api.coingecko.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com https://cdnjs.cloudflare.com; img-src 'self' data: https:; font-src 'self' https://fonts.gstatic.com https://cdnjs.cloudflare.com; connect-src 'self' https: wss: ws:; frame-src 'none';"
    X-Permitted-Cross-Domain-Policies = "none"
    Strict-Transport-Security = "max-age=31536000; includeSubDomains; preload"

[[headers]]
  for = "*.js"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "*.css"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "/assets/*"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"
