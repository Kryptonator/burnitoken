class PriceOracleRecovery{constructor(){this.backupInterval=5*60*1e3;this.backupKey="xrp_oracle_backup";this.maxBackupAge=24*60*60*1e3;this.recoveryAttempts=0;this.maxRecoveryAttempts=3;this.startBackupSystem();this.setupEventListeners();console.log("\ud83d\udee1\ufe0f Price Oracle Recovery System initialized")}startBackupSystem(){this.createBackup();setInterval(()=>{this.createBackup()},this.backupInterval);setInterval(()=>{this.cleanupOldBackups()},60*60*1e3)}setupEventListeners(){window.addEventListener("xrpOracleAlert",e=>{this.handleOracleAlert(e.detail)});document.addEventListener("visibilitychange",()=>{document.hidden||this.checkOracleHealth()});window.addEventListener("online",()=>{console.log("\ud83c\udf10 Network restored - checking Oracle health");this.checkOracleHealth()});window.addEventListener("offline",()=>{console.log("\ud83c\udf10 Network lost - activating emergency mode");this.activateEmergencyMode()})}createBackup(){try{if(!window.xrpOracle)return;const e={timestamp:Date.now(),version:"1.0.0",state:window.xrpOracle.getState(),healthReport:window.getXRPOracleHealth(),cacheSnapshot:this.getCacheSnapshot(),configuration:{refreshInterval:window.xrpOracle.config?.refreshInterval,cacheExpiry:window.xrpOracle.config?.cacheExpiry,maxRetryAttempts:window.xrpOracle.config?.maxRetryAttempts}};const t=this.getBackups();t.push(e);const o=Date.now()-this.maxBackupAge;const i=t.filter(e=>e.timestamp>o);localStorage.setItem(this.backupKey,JSON.stringify(i.slice(-50)));console.log("\ud83d\udcbe Oracle backup created")}catch(e) { console.error("\u274c Backup creation failed:",e)}}getCacheSnapshot(){if(!window.xrpOracle||!window.xrpOracle.cache)return{};const e={};return window.xrpOracle.cache.forEach((t,o)=>{e[o]=t}),e}getBackups() { try{const e=localStorage.getItem(this.backupKey);return e?JSON.parse(e):[]}catch(e){return console.error("\u274c Failed to load backups:",e),[]}}getLatestValidBackup(){const e=this.getBackups().sort((e,t)=>t.timestamp-e.timestamp);for(const t of e)if(this.validateBackup(t))return t;return null}validateBackup(e) { if(!e||"object"!=typeof e)return!1;if(!e.timestamp||!e.state)return!1;if(!e.healthReport||!e.cacheSnapshot)return!1;if(Date.now()-e.timestamp>this.maxBackupAge)return!1;if(e.state.data&&e.state.data.price) { const t=parseFloat(e.state.data.price);if(isNaN(t)||t<=0||t>1e4)return!1}return!0}async restoreFromBackup(e=null) { try{const t=e||this.getLatestValidBackup();if(!t)throw new Error("No valid backup found");if(console.log("\ud83d\udd04 Restoring Oracle from backup..."),!window.xrpOracle&&(window.initXRPPriceOracle(),await this.sleep(2e3)),t.cacheSnapshot&&window.xrpOracle.cache&&(window.xrpOracle.cache.clear(),Object.entries(t.cacheSnapshot).forEach(([e,t])=>{window.xrpOracle.cache.set(e,t)})),t.state&&t.state.data&&window.xrpOracle.updateState({status:"success",data:t.state.data,currentApi:t.state.currentApi||"Backup",lastUpdate:t.timestamp,error:null}),window.xrpOracle.updateUI&&window.xrpOracle.updateUI(),console.log("\u2705 Oracle restored from backup successfully"),setTimeout(()=>{window.xrpOracle&&window.xrpOracle.fetchPrice&&window.xrpOracle.fetchPrice().catch(console.error)},1e3),!0)}catch(e) { return console.error("\u274c Oracle restoration failed:",e),!1}}async handleOracleAlert(e){if(console.log("\ud83d\udea8 Recovery system handling alert:",e),"consecutive_failures"===e.type&&e.count>=3) { console.log("\ud83d\udd04 Triggering automatic recovery..."),this.recoveryAttempts++;if(this.recoveryAttempts<=this.maxRecoveryAttempts) { const e=await this.restoreFromBackup();e?(console.log("\u2705 Automatic recovery successful"),this.recoveryAttempts=0):(console.error("\u274c Automatic recovery failed"),this.recoveryAttempts>=this.maxRecoveryAttempts&&this.activateEmergencyMode())}else console.error("\ud83d\udea8 Max recovery attempts reached - activating emergency mode"),this.activateEmergencyMode()}}async checkOracleHealth(){try{if(!window.xrpOracle)return console.log("\ud83d\udd04 Oracle not found - attempting to restore..."),void await this.restoreFromBackup();const e=window.getXRPOracleHealth();e&&e.healthy||(console.log("\ud83d\udd04 Oracle unhealthy - attempting recovery..."),window.xrpOracle.stop&&window.xrpOracle.start&&(window.xrpOracle.stop(),await this.sleep(2e3),window.xrpOracle.start(),await this.sleep(5e3),!window.getXRPOracleHealth()?.healthy&&await this.restoreFromBackup()))}catch(e) { console.error("\u274c Health check failed:",e)}}activateEmergencyMode(){console.warn("\ud83d\udea8 EMERGENCY MODE ACTIVATED - Using static fallback data");const e=this.getLatestValidBackup();e&&e.state&&e.state.data?this.displayEmergencyData(e.state.data,e.timestamp):this.displayEmergencyError();this.showEmergencyNotification();setInterval(()=>{console.log("\ud83d\udd04 Emergency mode - attempting recovery...");this.checkOracleHealth()},5*60*1e3)}displayEmergencyData(e,t){document.querySelectorAll('[id*="xrp-price"], [id*="price-widget"]').forEach(o=>{const i=o.querySelector(".price-value, .price"),s=o.querySelector(".price-status, .status");i&&(i.innerHTML=`$${e.price.toFixed(6)}`,i.style.opacity="0.7"),s&&(s.innerHTML="\ud83d\udea8 Emergency Mode",s.className="price-status status-emergency",s.title=`Last update: ${new Date(t).toLocaleString()}`),o.style.border="2px solid #f59e0b",o.style.backgroundColor="rgba(245, 158, 11, 0.1)"})}displayEmergencyError(){document.querySelectorAll('[id*="xrp-price"], [id*="price-widget"]').forEach(e=>{e.innerHTML=' <div class="emergency-error"> <div class="error-icon">\u26a0\ufe0f</div> <div class="error-text">Price Service Unavailable</div> <div class="error-subtitle">Emergency maintenance mode</div> </div> ',e.style.border="2px solid #ef4444",e.style.backgroundColor="rgba(239, 68, 68, 0.1)"})}showEmergencyNotification(){const e=document.createElement("div");e.id="emergency-notification",e.innerHTML=' <div style=" position: fixed; top: 20px; right: 20px; background: #f59e0b; color: white; padding: 15px 20px; border-radius: 8px; box-shadow: 0 4px 12px rgba(0,0,0,0.3); z-index: 9999; font-weight: 500; max-width: 300px; "> \ud83d\udea8 Price Service Recovery Mode <div style="font-size: 0.9em; margin-top: 5px; opacity: 0.9;"> Displaying emergency data while reconnecting... </div> </div> ',document.body.appendChild(e),setTimeout(()=>{e.parentNode&&e.parentNode.removeChild(e)},1e4)}cleanupOldBackups(){try{const e=this.getBackups(),t=Date.now()-this.maxBackupAge,o=e.filter(e=>e.timestamp>t&&this.validateBackup(e));o.length<e.length&&(localStorage.setItem(this.backupKey,JSON.stringify(o)),console.log(`\ud83e\uddf9 Cleaned up ${e.length-o.length} old backups`))}catch(e){console.error("\u274c Backup cleanup failed:",e)}}exportBackups(){const e=this.getBackups(),t={exportDate:(new Date).toISOString(),backupCount:e.length,backups:e},o=new Blob([JSON.stringify(t,null,2)],{type:"application/json"}),i=URL.createObjectURL(o),s=document.createElement("a");s.href=i,s.download=`xrp-oracle-backups-${Date.now()}.json`,s.click(),URL.revokeObjectURL(i),console.log("\ud83d\udcbe Backups exported")}importBackups(e){try{if(!e||!e.backups||!Array.isArray(e.backups))throw new Error("Invalid backup data format");const t=e.backups.filter(e=>this.validateBackup(e));if(0===t.length)throw new Error("No valid backups found in import data");const o=[...this.getBackups(),...t].filter((e,t,o)=>o.findIndex(t=>t.timestamp===e.timestamp)===t).sort((e,t)=>t.timestamp-e.timestamp).slice(0,50);return localStorage.setItem(this.backupKey,JSON.stringify(o)),console.log(`\u2705 Imported $${t.length} valid backups`),!0}catch(e) { return console.error("\u274c Backup import failed:",e),!1}}getStatus(){const e=this.getBackups(),t=this.getLatestValidBackup();return{isActive:!0,backupCount:e.length,latestBackupAge:t?Date.now()-t.timestamp:null,recoveryAttempts:this.recoveryAttempts,maxRecoveryAttempts:this.maxRecoveryAttempts,emergencyModeActive:null!==document.getElementById("emergency-notification")}}async manualRecovery(){return console.log("\ud83d\udd04 Manual recovery initiated..."),this.recoveryAttempts=0,await this.restoreFromBackup()}sleep(e){return new Promise(t=>setTimeout(t,e))}}const priceOracleRecovery=new PriceOracleRecovery;window.priceOracleRecovery=priceOracleRecovery,console.log("\ud83d\udee1\ufe0f Price Oracle Recovery System loaded"),console.log("Available commands:"),console.log("- priceOracleRecovery.manualRecovery() - Trigger manual recovery"),console.log("- priceOracleRecovery.getStatus() - Get recovery system status"),console.log("- priceOracleRecovery.exportBackups() - Export backup data"),console.log("- priceOracleRecovery.createBackup() - Create immediate backup");