// Emergency scripts.min.js - Simplified working version
// Performance monitoring
performance.mark('app-start');
window.addEventListener('load', function () {
  performance.mark('app-loaded');
  performance.measure('app-loading', 'app-start', 'app-loaded');
});

// Loading manager - ES5 compatible
var loadingManager = {
  show: function (elementId) {
    var element = document.getElementById(elementId);
    if (element) {
      element.setAttribute('data-loading', 'true');
      var spinner = document.createElement('div');
      spinner.className =
        'loading-spinner absolute inset-0 flex items-center justify-center bg-white';
      spinner.innerHTML =
        '<div class="animate-spin rounded-full h-8 w-8 border-t-2 border-orange-500"></div>';
      element.appendChild(spinner);
    }
  },
  hide: function (elementId) {
    var element = document.getElementById(elementId);
    if (element) {
      element.removeAttribute('data-loading');
      var spinner = element.querySelector('.loading-spinner');
      if (spinner) {
        spinner.remove();
      }
    }
  },
};

// Basic utilities
var utils = {
  debounce: function (func, wait) {
    var timeout;
    return function () {
      var context = this;
      var args = arguments;
      clearTimeout(timeout);
      timeout = setTimeout(function () {
        func.apply(context, args);
      }, wait);
    };
  },

  formatNumber: function (num) {
    if (typeof num !== 'number') return '0';
    return num.toLocaleString();
  },

  isValidEmail: function (email) {
    var re = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    return re.test(email);
  },

  showNotification: function (message, type) {
    var notification = document.createElement('div');
    notification.className =
      'fixed top-4 right-4 z-50 max-w-md p-4 rounded-lg shadow-lg transition-all duration-300 ' +
      (type === 'error'
        ? 'bg-red-100 text-red-800 border border-red-200'
        : type === 'success'
          ? 'bg-green-100 text-green-800 border border-green-200'
          : 'bg-blue-100 text-blue-800 border border-blue-200');

    notification.innerHTML =
      '<div class="flex items-center justify-center">' +
      '<svg class="h-6 w-6 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">' +
      '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"/>' +
      '</svg>' +
      '<span>' +
      message +
      '</span>' +
      '<button class="ml-4 text-xl font-bold" onclick="this.parentElement.parentElement.remove()">&times;</button>' +
      '</div>';

    document.body.appendChild(notification);
    setTimeout(function () {
      if (notification) {
        notification.remove();
      }
    }, 5000);
  },
};

// Safe DOM ready
function domReady(callback) {
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', callback);
  } else {
    callback();
  }
}

// Initialize when DOM is ready
domReady(function () {
  console.log('Emergency scripts.min.js loaded successfully');

  // Basic smooth scrolling for navigation
  var navLinks = document.querySelectorAll('a[href^="#"]');
  for (var i = 0; i < navLinks.length; i++) {
    navLinks[i].addEventListener('click', function (e) {
      var targetId = this.getAttribute('href').substring(1);
      var targetElement = document.getElementById(targetId);
      if (targetElement) {
        e.preventDefault();
        targetElement.scrollIntoView({
          behavior: 'smooth',
          block: 'start',
        });
      }
    });
  }

  // Mobile menu toggle
  var mobileMenuButton = document.querySelector('[data-mobile-menu-toggle]');
  var mobileMenu = document.querySelector('[data-mobile-menu]');
  if (mobileMenuButton && mobileMenu) {
    mobileMenuButton.addEventListener('click', function () {
      mobileMenu.classList.toggle('hidden');
    });
  }

  // Parallax elements (optional)
  var parallaxElements = document.querySelectorAll('.parallax-element');
  for (var i = 0; i < parallaxElements.length; i++) {
    parallaxElements[i].style.transform = 'translateY(0px)';
  }

  // Scroll-based animations
  var lastScrollTop = 0;
  window.addEventListener(
    'scroll',
    utils.debounce(function () {
      var scrollTop = window.pageYOffset;
      var parallaxElements = document.querySelectorAll('.parallax-element');
      for (var i = 0; i < parallaxElements.length; i++) {
        var speed = (scrollTop - lastScrollTop) * 0.5;
        parallaxElements[i].style.transform = 'translateY(' + speed + 'px)';
      }
      lastScrollTop = scrollTop;
    }, 10),
  );

  // Intersection Observer for fade-in animations
  if ('IntersectionObserver' in window) {
    var fadeObserver = new IntersectionObserver(
      function (entries) {
        for (var i = 0; i < entries.length; i++) {
          var entry = entries[i];
          if (entry.isIntersecting) {
            entry.target.classList.add('animate-fade-in-up');
            fadeObserver.unobserve(entry.target);
          }
        }
      },
      { threshold: 0.1 },
    );

    var fadeElements = document.querySelectorAll('.fade-in-on-scroll');
    for (var i = 0; i < fadeElements.length; i++) {
      fadeObserver.observe(fadeElements[i]);
    }
  }
});

// Global error handler
window.addEventListener('error', function (event) {
  console.warn('Script error caught:', event.error);
  // Don't break the page for script errors
  return true;
});

console.log('Emergency scripts.min.js initialized - Basic functionality restored');
